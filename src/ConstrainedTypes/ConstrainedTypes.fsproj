<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <Version>0.2.0</Version>
    <Authors>Benjamin Collins</Authors>
    <PackageDescription>
      ConstrainedTypes is a set of type providers for F# that aims to implement
      an approximation of refinement types for common usecases of such types.
    </PackageDescription>
    <Copyright>© Benjamin Collins.  All rights reserved.</Copyright>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <DevelopmentDependency>true</DevelopmentDependency>
    <PackageReleaseNotes>
      Added implementation of RangedInt
    </PakageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\..\paket-files\fsprojects\FSharp.TypeProviders.SDK\src\ProvidedTypes.fsi" />
    <Compile Include="..\..\paket-files\fsprojects\FSharp.TypeProviders.SDK\src\ProvidedTypes.fs" />
    <Compile Include="Provider.fs" />
  </ItemGroup>

  <Import Project="..\..\.paket\Paket.Restore.targets" />
</Project>
